(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{256:function(t,i,s){"use strict";s.r(i);var v=s(0),_=Object(v.a)({},(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-常用命令行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令行"}},[t._v("#")]),t._v(" git 常用命令行")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("git add .")])]),t._v(" "),s("li",[s("p",[t._v("git commit -m '备注'")])]),t._v(" "),s("li",[s("p",[t._v("git checkout 本地文件      恢复本地文件（变成和暂存区一样）")])]),t._v(" "),s("li",[s("p",[t._v("git diff [name]    查看文件修改")])]),t._v(" "),s("li",[s("p",[t._v("git remote add origin master 添加远程仓库")])]),t._v(" "),s("li",[s("p",[t._v("git pull --rebase origin master  修改远程仓库到本地分支")])]),t._v(" "),s("li",[s("p",[t._v("git push -u origin master   推送到默认远程仓库")])]),t._v(" "),s("li",[s("p",[t._v("git push -f 强制推送")])]),t._v(" "),s("li",[s("p",[t._v("git branch [name] 新建分支")])]),t._v(" "),s("li",[s("p",[t._v("git checkout -b [name] origin/dev 新建分支并切换分支，默认远程origin/dev分支")])]),t._v(" "),s("li",[s("p",[t._v("git branch -d [name] 删除分支")])]),t._v(" "),s("li",[s("p",[t._v("git merge [name] [--no-f] 合并分支(--no-ff保留commit信息)")])]),t._v(" "),s("li",[s("p",[t._v("git stash [save ‘备注’] 存储当前修改的内容")])]),t._v(" "),s("li",[s("p",[t._v("git stash list 查看所有保存的版本")])]),t._v(" "),s("li",[s("p",[t._v("git stash pop 回到最后一个stash")])]),t._v(" "),s("li",[s("p",[t._v("git stash apply stash@{0} 回到指定的stash")])]),t._v(" "),s("li",[s("p",[t._v("git stash show 对比diff")])]),t._v(" "),s("li",[s("p",[t._v("git stash drop stash@{0} 移除指定stash")])]),t._v(" "),s("li",[s("p",[t._v("git stash clear 移除所有的存储")])]),t._v(" "),s("li",[s("p",[t._v("git cherry-pick 62ecb3 合并指定的某一个commit 到当前分支")])]),t._v(" "),s("li",[s("p",[t._v("git rebase  重设基线 合并多个提交、多人开发合并当前提交到最新提交后")])])])])}),[],!1,null,null,null);i.default=_.exports}}]);